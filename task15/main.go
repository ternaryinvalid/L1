package main

import (
	"fmt"
	"strings"
)

/*
Поскольку в Go срез(в данном случае подстрока) ссылается на оригинальный срез (оригинальную строку),
оригинальный срез (оригинальная строка) не будет освобождена из памяти до тех пор, пока подстрока существует.
Это может привести к накоплению большого количества неиспользуемой памяти.
Чтобы исправить это, можно скопировать нужную часть строки в новую переменную,
чтобы избежать сохранения ссылки на оригинальную строку.
*/

var justString string

func createHugeString(s int) string {
	//создаем большую строку
	return strings.Repeat("s", s)
}

func someFunc() {
	//большая строка
	v := createHugeString(1 << 10)

	//слайс емкостью в 100 байт
	slice := make([]byte, 100)

	//копируем фрагмент огромной строки в заранее подготовленый слайс
	copy(slice, v[:100])
	justString = string(slice)
}

func main() {
	someFunc()
	fmt.Println(justString)
}
